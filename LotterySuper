/*
super class for different kinds of lottery
note: ArrayList<picks> will be used by powerball and
 megamilloins to store white/primary numbers of those tickets
 */

import java.util.ArrayList;

public class LotteryTicket {
    private static int ticketsSold = 0; //total of all lottery tickets
    private String name; //which type
    private ArrayList<Integer> picks;
    private int numVals;
    private int maxVal;

    //quickpick ticket
    //write valideate, rest of this class
    
    public LotteryTicket(String name, int numVals, int maxVal) {
        this.name = name;
        this.numVals = numVals;
        this.maxVal = maxVal;
        if (numVals > maxVal) {
            throw new IllegalStateException("bruh, numVals > maxVal");
        }
        picks = new ArrayList<Integer>();
        for (int i = 0; i < numVals; i++) {
            picks.add(pickUniqueVal());
        }
        if (!validate()) {
            throw new IllegalStateException("ticket invalid");
        }
        ticketsSold++;
    }

    public LotteryTicket(String name, int numVals, int maxVal, int[] choices) {
        this.name = name;
        this.numVals = numVals;
        this.maxVal = maxVal;
        if (numVals > maxVal) {
            throw new IllegalStateException("bruh, numVals > maxVal");
        }
        picks = new ArrayList<Integer>();
        for (int i = 0; i < choices.length; i++) {
            picks.add(choices[i]);
        }
        if (!validate()) {
            throw new IllegalStateException("ticket invalid");
        }
        ticketsSold++;
    }

    public String toStringPicks() {
        return picks.toString();
    }

    public String toString() {
        return numVals + " of " + maxVal + " lottery ticket #" + ticketsSold + ", picks: " + picks.toString();
    }

    public boolean validate() {
        if (picks.size() != numVals)
            return false;
        for (int i = picks.size() - 1; i >= 0; i--) {
            if (i != picks.indexOf(picks.get(i))) {
                return false;
            }
            if (picks.get(i) < 1 || picks.get(i) > maxVal) {
                return false;
            }
        }
        return true;
    }

    private int pickUniqueVal() {
        int r = (int) ((Math.random() * maxVal)) + 1;
        while (inPicks(r)) {
            r = (int) ((Math.random() * maxVal)) + 1;
        }
        return r;
    }

    private boolean inPicks(int num) {
        if (picks.size() == 0) {
            return false;
        }
        for (int n : picks) {
            if (n == num) {
                return true;
            }
        }
        return false;
    }


    public int getMaxVal() {
        return maxVal;
    }

    public boolean grandPrizeWinner(LotteryTicket winningTicket) {
        if (this.picks.size() != winningTicket.picks.size())
            throw new IllegalStateException("they dif sizes g");
        if (this.getMaxVal() != winningTicket.getMaxVal()) {
            throw new IllegalStateException("idk wut you doing, different ranges");
        }

        for (int val : winningTicket.picks) {
            if (!this.picks.contains(val)) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        LotteryTicket myTicket = new LotteryTicket("myTicket", 5, 69);
        int gamesPlayed = 0;
        boolean notRich = true;
        while (notRich) {
            LotteryTicket winningTicket = new LotteryTicket("winningTicket", 5, 69);
            gamesPlayed++;
            //System.out.println("my ticket is " + myTicket);
            //System.out.println("The winning ticket is " + winningTicket);
            if (myTicket.grandPrizeWinner(winningTicket)) {
                System.out.println("\nI won after " + gamesPlayed + " games!!! I'm rich!!! WoooooooooHoooooooooo!!!!");
                notRich = false;
            } else {
                //System.out.println("Shucks......\n");
            }
        }
        System.out.println(ticketsSold);
    }
}

